{
	"info": {
		"_postman_id": "c449b448-a01a-45cd-8342-bdb80ba54a8a",
		"name": "OTUS Architect",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"item": [
				{
					"name": "Register Init",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"username\", jsonData['username']);",
									"pm.collectionVariables.set(\"password\", jsonData['password']);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/register/init",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"register",
								"init"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/profile",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Confirm  (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/register/confirm",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"register",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/profile",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const response = pm.response.json();",
									"pm.collectionVariables.set('token', response['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/login",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Confirm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"firstName\", jsonData['firstName']);",
									"pm.collectionVariables.set(\"lastName\", jsonData['lastName']);",
									"pm.collectionVariables.set(\"email\", jsonData['email']);",
									"pm.collectionVariables.set(\"phone\", jsonData['phone']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/register/confirm",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"register",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Checking profile\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get('username'));",
									"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get('firstName'));",
									"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get('lastName'));",
									"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get('email'));",
									"    pm.expect(jsonData.phone).to.eql(pm.collectionVariables.get('phone'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/profile",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"firstName\", jsonData['firstName']);",
									"pm.collectionVariables.set(\"lastName\", jsonData['lastName']);",
									"pm.collectionVariables.set(\"email\", jsonData['email']);",
									"pm.collectionVariables.set(\"phone\", jsonData['phone']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/profile",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Updated Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Checking profile\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get('username'));",
									"    pm.expect(jsonData.firstName).to.eql(pm.collectionVariables.get('firstName'));",
									"    pm.expect(jsonData.lastName).to.eql(pm.collectionVariables.get('lastName'));",
									"    pm.expect(jsonData.email).to.eql(pm.collectionVariables.get('email'));",
									"    pm.expect(jsonData.phone).to.eql(pm.collectionVariables.get('phone'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/profile",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Password Changing",
			"item": [
				{
					"name": "Register Init",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"username\", jsonData['username']);",
									"pm.collectionVariables.set(\"password\", jsonData['password']);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/register/init",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"register",
								"init"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oldPassword\": \"test\",\n  \"newPassword\": \"test2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arch.homework/otusapp/alapitskii/change-password",
							"protocol": "http",
							"host": [
								"arch",
								"homework"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"change-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const response = pm.response.json();",
									"pm.collectionVariables.set('token', response['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/login",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password (fail)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oldPassword\": \"absolutely incorrent password\",\n  \"newPassword\": \"test2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arch.homework/otusapp/alapitskii/change-password",
							"protocol": "http",
							"host": [
								"arch",
								"homework"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"change-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"password\", jsonData['newPassword']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oldPassword\": \"{{password}}\",\n  \"newPassword\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://arch.homework/otusapp/alapitskii/change-password",
							"protocol": "http",
							"host": [
								"arch",
								"homework"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"change-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with new password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/login",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile Visibility",
			"item": [
				{
					"name": "Register Init 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"username1\", jsonData['username']);",
									"pm.collectionVariables.set(\"password1\", jsonData['password']);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/register/init",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"register",
								"init"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const response = pm.response.json();",
									"pm.collectionVariables.set('token', response['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username1}}\",\n  \"password\": \"{{password1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/login",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Checking profile\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get('username1'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/profile",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Init 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"username2\", jsonData['username']);",
									"pm.collectionVariables.set(\"password2\", jsonData['password']);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/register/init",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"register",
								"init"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"const response = pm.response.json();",
									"pm.collectionVariables.set('token', response['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username2}}\",\n  \"password\": \"{{password2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/login",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Profile 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Checking profile\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(pm.collectionVariables.get('username2'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}/otusapp/alapitskii/profile",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otusapp",
								"alapitskii",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (pm.request.method !== 'GET') {",
					"    console.log(\"Request\");",
					"    console.log(JSON.parse(pm.request.body.raw));",
					"}",
					"if (pm.response.responseSize > 0) {",
					"    console.log(\"Response\");       ",
					"    console.log(pm.response.json());",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework"
		}
	]
}