FROM golang:alpine AS builder

# Set necessary environmet variables needed for our image
ENV GO111MODULE=on \
    CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64

# Move to working directory /build
WORKDIR /build

# Copy and download dependency using go mod
COPY api /api
COPY toolbox /toolbox

COPY delivery-service/go.mod /delivery-service/go.mod
COPY delivery-service/go.sum /delivery-service/go.sum

WORKDIR /delivery-service

RUN go mod download

WORKDIR /

COPY delivery-service /delivery-service

WORKDIR /delivery-service

# Build the application
RUN go build -o main .

WORKDIR /dist

# Copy binary from build to main folder
RUN cp /delivery-service/main .

# Build a small image
FROM scratch

COPY --from=builder /dist/main /

COPY keys /keys
COPY delivery-service/migrations /migrations

# Command to run
ENTRYPOINT ["/main"]
